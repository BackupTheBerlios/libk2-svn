
#	User configuration

DL_NAME				= libk2.so
DL_MAJOR_VER		= 1
DL_MINOR_VER		= 1
OUTPUT_PATH			= ../../../output.linux.gcc/
OPT_OUTPUT_PATH		= ../bin.opt/
DEBUG_OUTPUT_PATH	= ../bin.debug/

SRCS		= \
	assert.cpp \
	atomic.cpp \
	ipv4.cpp \
	process.cpp \
	runtime.cpp \
	socket_error.cpp \
	threading.cpp \
	timing.cpp

SOURCE_PATH			= ../../source/
CXXFLAGS            = -I../../ -I../depend/include/ -D_REENTRANT
LDFLAGS		        = -lc -lstdc++ -lpthread

#	Dynamic Library building rules

CC					= gcc
OBJS				= $(SRCS:.cpp=.o)
OPT_DL_NAME         = $(OPT_OUTPUT_PATH)$(DL_NAME)
DEBUG_DL_NAME       = $(DEBUG_OUTPUT_PATH)$(DL_NAME)

all:				opt debug
.PHONY:				all

opt:				OPT_CHDIR OPT_FLAGS $(DL)
.PHONY				opt

debug:				DEBUG_CHDIR DEBUG_FLAGS $(DL)
.PHONY				debug

objects:			$(OBJS)
.PHONY:				objects

OPT_CHDIR:
                    @cd ../bin.opt/

CHDIR_DBUG:
                    @cd ../bin.debug/

OPT_CXXFLAGS:       flags
                    @echo '$(OPT_CXXFLAGS)' > $@

DEBUG_CXXFLAGS:     flags
                    @echo '$(DEBUG_CXXFLAGS)' > $@


DL:                 $(OBJS}
	@echo Building "["$@"]"
	@$(CC) -g -shared -Wl,-soname,$(DL).$(DL_MAJOR_VER) $(OBJS) $(LDFLAGS) -o $(DL).$(DL_MAJOR_VER).$(DL_MINOR_VER)
	@ldconfig -n .
	@cd $(OPT_OUTPUT_PATH);ln -sf $(DL_NAME).$(DL_MAJOR_VER) $(DL_NAME)




$(OPT_OUTPUT_PATH)$(DL_NAME):			$(OPT_OBJS)
	@echo Building "["$@"]"
	@$(CC) -g -shared -Wl,-soname,$(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER) $(OBJS) $(LDFLAGS) -o $(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER).$(DL_MINOR_VER)
	@ldconfig -n $(OUT_OUTPUT_PATH)
	@cd $(OPT_OUTPUT_PATH);ln -sf $(DL_NAME).$(DL_MAJOR_VER) $(DL_NAME)

$(OPT_OUTPUT_PATH)$(DL_NAME):			$(OPT_OBJS)
	@echo Building "["$@"]"
	@$(CC) -g -shared -Wl,-soname,$(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER) $(OBJS) $(LDFLAGS) -o $(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER).$(DL_MINOR_VER)
	@ldconfig -n $(OUT_OUTPUT_PATH)
	@cd $(OPT_OUTPUT_PATH);ln -sf $(DL_NAME).$(DL_MAJOR_VER) $(DL_NAME)

$(DEBUG_OUTPUT_PATH)$(DL_NAME):			$(DEBUG_OBJS)
	@echo Building "["$@"]"
	@$(CC) -g -shared -Wl,-soname,$(DEBUG_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER) $(OBJS) $(LDFLAGS) -o $(DEBUG_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER).$(DL_MINOR_VER)
	@ldconfig -n $(DEBUG_OUTPUT_PATH)
	@cd $(DEBUG_OUTPUT_PATH);ln -sf $(DL_NAME).$(DL_MAJOR_VER) $(DL_NAME)

$(OPT_OBJS):	$(OPT_OUTPUT_PATH)%.o: $(SOURCE_PATH)%.cpp
	@echo Building "["$@"]"
	@$(CC) -fPIC -Wall -g $(CXXFLAGS) -o2 -DNDEBUG $@ -x c++ -c $^

$(DEBUG_OBJS): 	$(DEBUG_OUTPUT_PATH)%.o: $(SOURCE_PATH)%.cpp
	@echo Building "["$@"]"
	@$(CC) -fPIC -Wall -g $(CXXFLAGS) -o $@ -x c++ -c $^

clean:
	@rm -f $(OPT_OUTPUT_PATH)$(DL_NAME)\
	rm -f $(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER)\
	rm -f $(OPT_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER).$(DL_MINOR_VER)\
	rm -f $(OPT_OBJS)\
	rm -f $(DEBUG_OUTPUT_PATH)$(DL_NAME)\
	rm -f $(DEBUG_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER)\
	rm -f $(DEBUG_OUTPUT_PATH)$(DL_NAME).$(DL_MAJOR_VER).$(DL_MINOR_VER)\
	rm -f $(DEBUG_OBJS)

